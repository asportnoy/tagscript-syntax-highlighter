/* Create the CSS variables you'll use across your project's SCSS (Sass) files here.
Variable creation example:
$myVariable: #eeaaee;
*/
/*
Importing the "Roboto" Google Font below as an example.
Quick access: https://fonts.google.com
*/
@import url("https://fonts.googleapis.com/css2?family=Roboto&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fira+Mono&display=swap");
/* backtiles */
/* {=(COMMENT):XXX} */
/* {} */
/* == != >= <= | + / * ~ , ( ) __ ^ - : */
/* unix uses args user target server join replace if any all and or
break contains strf # random rand urlencode td index list cycle =
let assign in upper lower m math 50: c cmd redirect require blacklist react reactu dm delete silence override lvl range */
/* avatar id created_at joined_at roleids color name proper
position icon owner randomonline randomoffline members bots humans roles channels topic slowmode mention trunc round abs */
/* true false */
/* %a %A %w %d %-d %b %B %m %-m %y %Y %H %-H %I %-I %p %M %-M %S %-S %f %z %Z %j %-j %U %W %c %x %X %u %n %i %s */
/* http https */
.backtiles {
  color: #80FF80;
}

.comments {
  color: #72B8B8;
}

.brackets {
  color: #FF5555;
}

.operators {
  color: #00FFFF;
}

.blocks {
  color: #00FF00;
}

.parameters {
  color: #0080FF;
}

.boolean {
  color: #FFFF00;
}

.strf {
  color: #FF5555;
}

.http {
  color: #BA75FF;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  background-color: #3A4149;
  font-family: "Roboto", sans-serif;
  color: #e4e7ea;
  -webkit-font-smoothing: antialiased;
  font-size: 1.2rem;
}

.navbar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-item-align: auto;
      align-self: auto;
}

.container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.codeinfo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  gap: 1.5rem;
}

h4 {
  font-size: 1.3125rem;
  margin-bottom: .5rem;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 0;
  display: block;
}

textarea {
  /* background-color: transparent; */
  background-color: #515b65;
  color: #e4e7ea;
  border-radius: 4px;
  overflow: auto;
  overflow-wrap: break-word;
  height: auto;
  padding: .375rem .75rem;
  resize: vertical;
  border: 1px solid #23282c;
  font-family: "Roboto", sans-serif;
  font-size: 1.1rem;
  /* outline:none; */
}

textarea:focus {
  /* outline: white;
		outline-color: white;
		outline-offset: 0px;
		outline-color: $blueclr;
		border: none; 
		border-style: none; */
  border-color: #79d0ff;
  outline: 0;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(0, 162, 248, 0.25);
          box-shadow: 0 0 0 0.2rem rgba(0, 162, 248, 0.25);
}

textarea:placeholder {
  color: #ACB4BC;
}

::-webkit-input-placeholder {
  /* Chrome */
  color: #ACB4BC;
}

.info {
  list-style: none;
  vertical-align: text-top;
}

a {
  text-decoration: none;
  color: white;
}

a:hover {
  text-decoration: none;
  color: #e2e2e2;
}

ul, li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  text-align: center;
  margin: 0px;
  padding: 0px;
  line-height: 2em;
  gap: 3rem;
}

.output {
  color: #e4e7ea;
  white-space: pre-wrap;
  font-family: "Roboto", sans-serif;
  margin-top: 100px;
  margin-right: -100px;
}

div {
  display: block;
}

button {
  margin-left: 7rem;
}
/*# sourceMappingURL=style.css.map */